version: '3.8'

services:
  strategic-oracle-bot:
    # Build the Docker image from the Dockerfile in the current directory
    build: .

    # Name the container for easy identification
    container_name: strategic-oracle-bot

    # Load environment variables from the .env file in the same directory
    # This securely passes your API keys and other secrets to the container
    env_file:
      - .env

    # Map port 8000 inside the container to port 8000 on the host machine
    # This allows the Nginx reverse proxy to connect to the application
    ports:
      - "8000:8000"

    # Restart the container automatically if it stops for any reason,
    # ensuring the bot stays online
    restart: unless-stopped

volumes:
  # It's good practice to define a volume for any data you might want to persist,
  # though for this bot, the primary data is in the Supabase database.
  # This line is commented out but can be useful for future enhancements.
  # - ./:/app

# Note on the worker script:
# The run_analysis_worker.py script is not run as a separate service because
# it is designed to be a short-lived task. On a VPS, you should set up a cron job
# that executes the worker script inside the running container.
#
# Example cron job command:
# */5 * * * * docker exec strategic-oracle-bot python run_analysis_worker.py
